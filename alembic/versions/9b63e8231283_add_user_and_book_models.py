"""add user and book models

Revision ID: 9b63e8231283
Revises:
Create Date: 2025-10-04 05:35:00.542240

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9b63e8231283"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("first_name", sa.String(length=50), nullable=False),
        sa.Column("last_name", sa.String(length=50), nullable=False),
        sa.Column("card_number", sa.CHAR(length=6), nullable=False),
        sa.CheckConstraint(
            "card_number ~ '^[0-9]{6}$'", name="ck_users_card_six_digits"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_card_number"), "users", ["card_number"], unique=True)
    op.create_table(
        "books",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("serial_number", sa.CHAR(length=6), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("author", sa.String(length=255), nullable=False),
        sa.Column("is_borrowed", sa.Boolean(), nullable=False),
        sa.Column("borrowed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("borrowed_by", sa.CHAR(length=6), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.CheckConstraint(
            "serial_number ~ '^[0-9]{6}$'", name="ck_books_serial_six_digits"
        ),
        sa.CheckConstraint(
            "(is_borrowed AND borrowed_at IS NOT NULL AND borrowed_by IS NOT NULL) OR (NOT is_borrowed AND borrowed_at IS NULL AND borrowed_by IS NULL)",
            name="ck_books_borrow_state_consistent",
        ),
        sa.ForeignKeyConstraint(
            ["borrowed_by"], ["users.card_number"], ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_books_borrowed_by"), "books", ["borrowed_by"], unique=False
    )
    op.create_index(
        op.f("ix_books_serial_number"), "books", ["serial_number"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_books_serial_number"), table_name="books")
    op.drop_index(op.f("ix_books_borrowed_by"), table_name="books")
    op.drop_table("books")
    op.drop_index(op.f("ix_users_card_number"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
